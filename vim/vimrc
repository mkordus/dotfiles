set nocompatible
filetype off "required by vundle

set rtp+=~/.vim/bundle/Vundle.vim

call vundle#begin()
Plugin 'gmarik/Vundle.vim'

Plugin 'scrooloose/nerdtree.git'
Plugin 'bling/vim-airline'
Plugin 'tpope/vim-fugitive'
Plugin 'tomtom/tcomment_vim'
Plugin 'majutsushi/tagbar'
Plugin 'evidens/vim-twig'
Plugin 'Lokaltog/vim-easymotion'
Plugin 'SirVer/ultisnips'
Plugin 'honza/vim-snippets'
Plugin 'Shougo/vimproc.vim'
Plugin 'Shougo/unite.vim'
Plugin 'Shougo/neocomplete.vim'
Plugin 'mileszs/ack.vim'
Plugin 'amiorin/vim-project'
call vundle#end()

filetype plugin indent on

"main
set encoding=utf-8
set undolevels=1000

set showmatch
set showmode
set showcmd

let g:mapleader = "\<Space>"
inoremap jk <Esc>
nmap <leader>ev :tabedit $MYVIMRC<CR>
nmap <leader>w :w !sudo tee %<CR>

set number
set ttyfast

map j gj
map k gk

set splitbelow
set splitright

set cursorline

nmap <leader>h :noh<CR>

"command line mode
set wildmenu
set wildmode=longest:list,full
set wildignorecase
set wildignore+=*/.git/*
nnoremap ; :

"colors
syntax enable
set background=light
colorscheme solarized
set t_Co=256

"indent
set autoindent
set copyindent
set smartindent
set smarttab
set expandtab
set shiftwidth=4
set tabstop=4

"gVim options
set guioptions-=T
set guioptions-=r
set guioptions-=L
set guioptions-=m
set mousehide
set linespace=3

"searching
set ignorecase
set smartcase
set hlsearch
set incsearch
set magic

"Don't redraw while executing macros(performace)
set lazyredraw

"no anoying sound on errors
set noerrorbells
set novisualbell

"turn off backup
set nobackup
set noswapfile
set nowb

set lbr
set tw=500
set nowrap

" vim-airline
let g:airline_theme='luna'
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 0
set laststatus=2

"nerdtree
nnoremap <leader>n :NERDTreeToggle<cr>
let NERDTreeShowHidden=1

"smart way to move between windows
nnoremap <S-j> <C-W>j
nnoremap <S-k> <C-W>k
nnoremap <S-h> <C-W>h
nnoremap <S-l> <C-W>l
nnoremap <leader>v <C-w>v<C-w>l
nnoremap <leader>s <C-w>s

" Resize splitted views faster
nnoremap <S-C-h> 3<C-w><
nnoremap <S-C-l> 3<C-w>>
nnoremap <S-C-k> 3<C-w>+
nnoremap <S-C-j> 3<C-w>-

"speed up scrolling
set scrolljump=10

" Instead of 1 line, move 3 at a time
nnoremap <C-e> 3<C-e>
nnoremap <C-y> 3<C-y>

set completeopt=menuone,longest

" wrapping lines in visual mode
vnoremap < <gv
vnoremap > >gv

" gpicker
noremap <C-P> :GPickFile<CR>

" DBGPavim
let g:dbgPavimPort = 9000
let g:dbgPavimBreakAtEntry = 0

" tagbar
nnoremap <leader>l :TagbarToggle<CR>
nnoremap <leader>f :TagbarOpenAutoClose<CR>
let g:tagbar_width = 60

" use system clipboard instead of default vim
set clipboard=unnamedplus

" easymotion
map <Leader>j <Plug>(easymotion-j)
map <Leader>k <Plug>(easymotion-k)
let g:EasyMotion_startofline = 0 " keep cursor colum when JK motion

"neocomplete
let g:neocomplete#enable_at_startup = 1
let g:neocomplete#enable_smart_case = 1
if !exists('g:neocomplete#sources#omni#input_patterns')
  let g:neocomplete#sources#omni#input_patterns = {}
endif
let g:neocomplete#sources#omni#input_patterns.php = '[^. \t]->\h\w*\|\h\w*::'
inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"
inoremap <silent><CR> <C-r>=<SID>my_cr_function()<CR>

function! s:my_cr_function()
    if pumvisible()
        return neocomplete#close_popup() . UltiSnips#ExpandSnippet()
    else
        return "\<CR>"
    endif
endfunction

"ultiSnips
let g:UltiSnipsSnippetDirectories = ["UltiSnips", "ultisnips-snippets"]
let g:UltiSnipsJumpForwardTrigger="<c-k>"
let g:UltiSnipsJumpBackwardTrigger = "<c-j>"
let g:UltiSnipsExpandTrigger="<C-S-Space>"

"fugitive
nnoremap <silent> <leader>gs :Gstatus<CR>
nnoremap <silent> <leader>gd :Gdiff<CR>


"ack/ag
if executable('ag')
    let g:ackprg = "ag --nogroup --column --smart-case --follow"
endif

"project
let g:project_use_nerdtree = 1
set rtp+=~/.vim/bundle/vim-project/
call project#rc("~/projects")

Project '~/projects/symfonycmf', 'cmf'
