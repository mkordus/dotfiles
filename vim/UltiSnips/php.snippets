priority -50

##main

snippet gs "PHP Class Getter Setter" b
/** @param $1 $2 */
public function set${2/\w+\s*/\u$0/}($$2)
{
	$this->$2 = $$2;

	return $this;
}

/** @return $1 */
public function get${2/\w+\s*/\u$0/}()
{
	return $this->$2;
}
$0
endsnippet

snippet set "PHP Class Setter" b
/** @param $1 $2 */
public function set${2/\w+\s*/\u$0/}($$2)
{
	$this->$2 = $$2;

	return $this;
}
$0
endsnippet

snippet get "PHP Class Getter" b
/** @return $1 */
public function get${2/\w+\s*/\u$0/}()
{
	return $this->$2;
}
$0
endsnippet

##endmain

## Snippets from SnipMate, taken from
## https://github.com/scrooloose/snipmate-snippets.git

snippet array "array"
$${1:arrayName} = array('${2}' => ${3});${4}
endsnippet

snippet def "def"
define('${1}'${2});${3}
endsnippet

snippet do "do"
do {
	${2:// code... }
} while (${1:/* condition */});
endsnippet

snippet doc_f "doc_f"
/**
 * $2
 * @return ${4:void}
 * @author ${5:`!v g:snips_author`}
 **/
${1:public }function ${2:someFunc}(${3})
{${6}
}
endsnippet

snippet doc_i "doc_i"
/**
 * $1
 * @package ${2:default}
 * @author ${3:`!v g:snips_author`}
 **/
interface ${1:someClass}
{${4}
} // END interface $1"
endsnippet

snippet foreachk "foreachk"
foreach ($${1:variable} as $${2:key} => $${3:value}){
	${4:// code...}
}
endsnippet

snippet log "log"
error_log(var_export($${1}, true));
${0}
endsnippet

snippet pub "Public function" b
/**
 * ${3:undocumented function}
 *
 * @return ${4:void}
 */
public function ${1:name}(${2:$param})
{
	${VISUAL}${5:return null;}
}
$0
endsnippet

snippet pro "Protected function" b
/**
 * ${3:undocumented function}
 *
 * @return ${4:void}
 */
protected function ${1:name}(${2:$param})
{
	${VISUAL}${5:return null;}
}
$0
endsnippet

snippet pri "Private function" b
/**
 * ${3:undocumented function}
 *
 * @return ${4:void}
 */
private function ${1:name}(${2:$param})
{
	${VISUAL}${5:return null;}
}
$0
endsnippet

snippet fore "Foreach loop"
foreach ($${1:variable} as $${3:value}){
	${VISUAL}${4}
}
$0
endsnippet

snippet cl "Class declaration template" b
$1class $2
{
	public function ${4:__construct}(${5:$options})
	{
		${6:// code}
	}
}
$0
endsnippet

snippet interface "interface declaration template" b
/**
 * Interface ${1:`!p snip.rv=snip.fn.split('.')[0]`}
 */
interface $1
{
	public function ${3:__construct}(${4:$options})
	{
		${5:// code}
	}
}
$0
endsnippet

snippet construct "__construct()" b
/**
 * @param $2mixed ${1/, /\n * \@param mixed /g}
 */
public function __construct(${1:$dependencies})
{${1/\s?\$?(\w*)(,)*/\n    $this->$1 = $$1;/g}
}
$0
endsnippet

snippet ve "Dumb debug helper in HTML"
    echo '<pre>' . var_export($1, 1) . '</pre>';$0
endsnippet

# Symfony 2 based snippets
snippet sfa "Symfony 2 Controller action"
/**
* @Route("/${1:route_name}", name="$1")
* @Template()
*/
public function $1Action($2)
{
	$3
	return ${4:array();}$0
}
endsnippet

snippet inheritdoc "@inheritdoc docblock"
/**
 * {@inheritdoc}
 */
endsnippet

# :vim:ft=snippets:
